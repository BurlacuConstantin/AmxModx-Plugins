/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <hamsandwich>
#include <xs>
#include <zombie_escape>
#include <cstrike>

#define PLUGIN "[ZP] Addon: Infect-Effect"
#define VERSION "1.0"
#define AUTHOR "Dias"

new g_effect_id[33], g_had_effect[33]

new g_effect_id2[33],g_had_effect2[33]

new const effect_model[] = "sprites/zombie_escape/humanwin.spr"
new const effect_model2[] = "sprites/zombie_escape/zombiewin.spr"

new cvar_scale, cvar_showtime, cvar_lightlevel,g_max

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	RegisterHam(Ham_Spawn, "player", "fw_spawn_post", 1)
	register_forward(FM_AddToFullPack, "fw_WhatTheFuck_Post", 1)

	register_forward(FM_AddToFullPack, "fw_WhatTheFuck_Post2", 1)

	//register_event( "SendAudio","ev_TerroWin","a","2=%!MRAD_terwin");
    	//register_event( "SendAudio","ev_CounterWin","a","2=%!MRAD_ctwin");
	
	cvar_scale = register_cvar("zp_in-ef_scale", "0.035")
	cvar_showtime = register_cvar("zp_in-ef_showtime", "7.0")
	cvar_lightlevel = register_cvar("zp_in-ef_lightlevel", "100.0")
		
	g_max = get_maxplayers()
}

public plugin_precache()
{
	precache_model(effect_model)
	precache_model(effect_model2)
}

public fw_spawn_post(id)
{
	if(g_had_effect[id])
		remove_effect(id)

	if(g_had_effect2[id])
		remove_effect2(id)
}

public ze_roundend(winteam)
{
	
	//new iPlayers[32],iNum
	//get_players(iPlayers,iNum,"c")
	
	for(new i = 1;i < g_max;i++)
	{
		new id = i//iPlayers[i]

		if(!is_user_connected(id) || is_user_bot(id))
					return

		if(is_user_alive(id) && winteam == 1)
		{
			fm_set_user_speed(id,1.0)
			show_effect2(id)
			set_task(get_pcvar_float(cvar_showtime),"remove_speed",id)
		}
		else if(is_user_alive(id) && winteam == 2)
		{
			fm_set_user_speed(id,1.0)
			show_effect(id)
			set_task(get_pcvar_float(cvar_showtime),"remove_speed",id)
		}
	}
}

public remove_speed(id)
{
	if(cs_get_user_team(id) == CS_TEAM_T)
	{
		fm_set_user_speed(id,350.0)
	}
	else if(cs_get_user_team(id) == CS_TEAM_CT)
	{
		fm_set_user_speed(id,250.0)
	}
}

public show_effect(id)
{
	g_effect_id[id] = engfunc(EngFunc_CreateNamedEntity, engfunc(EngFunc_AllocString, "env_sprite"))
	
	if (!pev_valid(g_effect_id[id]))
		return
	
	g_had_effect[id] = 1
	
	set_pev(g_effect_id[id], pev_solid, SOLID_NOT)
	set_pev(g_effect_id[id], pev_movetype, MOVETYPE_NONE)

	engfunc(EngFunc_SetModel, g_effect_id[id], effect_model)
	
	set_pev(g_effect_id[id], pev_rendermode, kRenderTransAlpha)
	set_pev(g_effect_id[id], pev_renderamt, 0.0)
	set_pev(g_effect_id[id], pev_owner, id)
	set_pev(g_effect_id[id], pev_scale, get_pcvar_float(cvar_scale))
	set_pev(g_effect_id[id], pev_light_level, get_pcvar_float(cvar_lightlevel))
	
	set_task(get_pcvar_float(cvar_showtime), "remove_effect", g_effect_id[id])
}

public show_effect2(id)
{
	g_effect_id2[id] = engfunc(EngFunc_CreateNamedEntity, engfunc(EngFunc_AllocString, "env_sprite"))

	if (!pev_valid(g_effect_id2[id]))
		return

	g_had_effect2[id] = 1

	set_pev(g_effect_id2[id], pev_solid, SOLID_NOT)
	set_pev(g_effect_id2[id], pev_movetype, MOVETYPE_NONE)

	engfunc(EngFunc_SetModel, g_effect_id2[id], effect_model2)

	set_pev(g_effect_id2[id], pev_rendermode, kRenderTransAlpha)
	set_pev(g_effect_id2[id], pev_renderamt, 0.0)
	set_pev(g_effect_id2[id], pev_owner, id)
	set_pev(g_effect_id2[id], pev_scale, get_pcvar_float(cvar_scale))
	set_pev(g_effect_id2[id], pev_light_level, get_pcvar_float(cvar_lightlevel))
	
	set_task(get_pcvar_float(cvar_showtime), "remove_effect2", g_effect_id2[id])
}

public fw_WhatTheFuck_Post2(es, e, ent, host, host_flags, player, p_set)
{
	if(!(0 < host < 33))
		return FMRES_IGNORED
		
	if(ent != g_effect_id2[host] || !pev_valid(ent))
		return FMRES_IGNORED
		
	if(pev(ent, pev_owner) != host)
		return FMRES_IGNORED
		
	if(!is_user_alive(host))
		return FMRES_IGNORED
		
	static Float:origin[3], Float:forvec[3], Float:voffsets[3], Float:Angles[3]
	
	pev(host, pev_origin, origin)
	pev(host, pev_view_ofs, voffsets)
	pev(host, pev_angles, Angles)
	
	xs_vec_add(origin, voffsets, origin)
	
	// Get a forward vector in the direction of player's aim
	velocity_by_aim(host, 10, forvec)
	
	// Set the sprite on the new origin
	xs_vec_add(origin, forvec, origin)
	
	engfunc(EngFunc_SetOrigin, ent, origin)
	set_es(es, ES_Origin, origin)
	set_es(es, ES_Angles, Angles)
	
	// Make the sprite visible
	set_es(es, ES_RenderMode, kRenderTransAdd)
	set_es(es, ES_RenderAmt, 200)
		
	return FMRES_HANDLED
}

public fw_WhatTheFuck_Post(es, e, ent, host, host_flags, player, p_set)
{
	if(!(0 < host < 33))
		return FMRES_IGNORED
		
	if(ent != g_effect_id[host] || !pev_valid(ent))
		return FMRES_IGNORED
		
	if(pev(ent, pev_owner) != host)
		return FMRES_IGNORED
		
	if(!is_user_alive(host))
		return FMRES_IGNORED
		
	static Float:origin[3], Float:forvec[3], Float:voffsets[3], Float:Angles[3]
	
	pev(host, pev_origin, origin)
	pev(host, pev_view_ofs, voffsets)
	pev(host, pev_angles, Angles)
	
	xs_vec_add(origin, voffsets, origin)
	
	// Get a forward vector in the direction of player's aim
	velocity_by_aim(host, 10, forvec)
	
	// Set the sprite on the new origin
	xs_vec_add(origin, forvec, origin)
	
	engfunc(EngFunc_SetOrigin, ent, origin)
	set_es(es, ES_Origin, origin)
	set_es(es, ES_Angles, Angles)
	
	// Make the sprite visible
	set_es(es, ES_RenderMode, kRenderTransAdd)
	set_es(es, ES_RenderAmt, 200)
		
	return FMRES_HANDLED
}

public remove_effect(ent)
{
	g_had_effect[pev(ent, pev_owner)] = 0
	
	if(pev_valid(ent))
		engfunc(EngFunc_RemoveEntity, ent)
}

public remove_effect2(ent)
{	
	g_had_effect2[pev(ent,pev_owner)] = 0

	if(pev_valid(ent))
		engfunc(EngFunc_RemoveEntity,ent)
}

stock fm_set_user_speed(id, Float:Speed)
{
	set_pev(id, pev_maxspeed, Speed)
}

/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
