/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <nvault>
#include <zombie_escape>
#include <fakemeta>
#include <licenta>

#define PLUGIN "Infection Rank"
#define VERSION "0.7"
#define AUTHOR "AsuStar"

new InfectionCount[33],EscapeCount[33]

new const Tag[] = "!v[Zombie Escape Rank]:!g"

new const LinkToImg[] = "http://s7.postimg.org/vy5twmbdn/cooltext147054833998037.png"

//=====NVAULT========
new g_nvault,data[64]

//===== END NVAULT ======

public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_clcmd("say /top15","cmd_top15")
	register_clcmd("say /rank","cmd_rank")
	
	register_forward( FM_ClientUserInfoChanged, "ChangeName" )
	
	g_nvault = nvault_open("Infection_Rank_ZE")
	
	if(g_nvault == INVALID_HANDLE)
	{
		server_print("------------------------------")
		server_print("Nu sa putut incarca fisierul nvault [Infection_Rank_ZE]")
		server_print("------------------------------")
		pause("ade")
	}
	
	get_datadir(data,sizeof(data) - 1)

}

public plugin_precache()
{
	CheckServer("89.39.13.118")
}

public plugin_end()
{
	nvault_close(g_nvault)
}

//====================NATIVES ========================

public plugin_natives()
{
	register_native("get_user_infections","native_get_user_infections")
	register_native("get_user_escapes","native_get_user_escapes")
	register_native("set_user_infections","native_set_user_infections")
	register_native("set_user_escapes","native_set_user_escapes")
}

public native_get_user_infections(id)
{
	return InfectionCount[id]
}

public native_get_user_escapes(id)
{
	return EscapeCount[id]
}

public native_set_user_infections(id,number)
{
	InfectionCount[id] = number
}

public native_set_user_escapes(id,number)
{
	EscapeCount[id] = number
}

//==================== END NATIVES ========================

public client_putinserver(id)
{	
	LoadRank(id)
}

public client_disconnect(id)
{
	SaveRank(id)
}


public ze_user_infected(id, infector)
{
	InfectionCount[infector]++
}

public ze_roundend(ZE_TEAM_HUMAN)
{
	new iPlayers[32],iNum
	get_players(iPlayers,iNum,"c")
	
	for(new i = 0;i < iNum; i++)
	{
		new id = iPlayers[i]
		
		if(is_user_alive(id) && cs_get_user_team(id) == CS_TEAM_CT)
		{
			EscapeCount[id]++
		}
	}
}

public cmd_rank(id)
{
	ColorChat(id,"%s Your rank is: !e%i!g !vinfections !gand !e%i!g !vescapes",Tag,InfectionCount[id],EscapeCount[id])
}

public cmd_top15(id)
{	
	static Sort[33][3]
	new players[32],num,count,index
	get_players(players,num)
    
	for(new i = 0; i < num; i++)
	{
		index = players[i]
		Sort[count][0] = index
		Sort[count][1] = InfectionCount[index]
		Sort[count][2] = EscapeCount[index]
		count++;
	}
    
	SortCustom2D(Sort,count,"Compare_Infections")
	new motd[1501],iLen
	iLen = formatex(motd, sizeof motd - 1, "<font color=#66FFFF><body bgcolor=#000000><br><center><img src=^"%s^"</center><pre>",LinkToImg)
	//iLen = formatex(motd, (sizeof motd - 1) - iLen,"<body bgcolor=#000000><font color=#66FFFF><pre>")
	iLen += formatex(motd[iLen], (sizeof motd - 1) - iLen,"    %s %-22.22s %-22.22s %3s^n", "#", "Name", "Infection", "Escape")
    
	new y = clamp(count,0,15)
	new name[32],kindex
    
	for(new x = 0; x < y; x++)
	{
		kindex = Sort[x][0]
		get_user_name(kindex,name,sizeof name - 1)
		iLen += formatex(motd[iLen], (sizeof motd - 1) - iLen,"%d %-22.22s  %d                      %d^n^n", x + 1, name, Sort[x][1],Sort[x][2])
	}
	iLen += formatex(motd[iLen], (sizeof motd - 1) - iLen,"</body></font></pre>")
	show_motd(id,motd, "Top15 Zombie Escape WarGods")
	
}

public Compare_Infections(elem1[], elem2[])
{
    if(elem1[1] > elem2[1])
        return -1
    else if(elem1[1] < elem2[1])
        return 1
    
    return 0
}

//=====NVAULT========

LoadRank(id)
{
	new Name[32]
	get_user_name(id,Name,sizeof(Name) -1)

 	new vaultkey[64],vaultdata[256]
	
 	formatex(vaultkey,63,"%s",Name)
 	formatex(vaultdata,255," ^"%i^" ^"%i^"",InfectionCount[id],EscapeCount[id])
	
 	nvault_get(g_nvault, vaultkey, vaultdata, 255)

 	new pInfect[32],pEscape[32]

 	parse(vaultdata,pInfect,sizeof(pInfect) - 1,pEscape,sizeof(pEscape) - 1)

 	InfectionCount[id] = str_to_num(pInfect)
 	EscapeCount[id] = str_to_num(pEscape)
	
	return PLUGIN_HANDLED
}

SaveRank(id)
{
	new Name[32]
	get_user_name(id,Name,sizeof(Name) -1)

 	new vaultkey[64],vaultdata[256]
	
 	formatex(vaultkey,63,"%s",Name)
 	formatex(vaultdata,255," ^"%i^" ^"%i^"",InfectionCount[id],EscapeCount[id])
	
 	nvault_set(g_nvault,vaultkey,vaultdata)
	
	return PLUGIN_HANDLED
	
}

//=====NVAULT========

public ChangeName(id,Buffer)
{
	if(!is_user_connected(id)) 
	return FMRES_IGNORED
	
	static Name[32]
	
	engfunc(EngFunc_InfoKeyValue,Buffer,"name",Name,sizeof( Name ) -1)
	
	new name[32]
	
	get_user_name(id,name,sizeof(name) - 1)
	
	if(equal(Name,name))
	{
		SaveRank(id)
	}
	else
	{
		set_task(0.1,"Reload_Rank",id)
	}
	return FMRES_IGNORED
}

public Reload_Rank(id)
{
	InfectionCount[id] = 0
	EscapeCount[id] = 0
	
	LoadRank(id)
	remove_task(id)
}
	
stock ColorChat( const id, const input[ ], any:... )
{
new count = 1, players[ 32 ]

static msg[ 191 ]
vformat( msg, 190, input, 3 )

replace_all( msg, 190, "!v", "^4" ) //- verde
replace_all( msg, 190, "!g", "^1" ) //- galben
replace_all( msg, 190, "!e", "^3" ) //- echipa
replace_all( msg, 190, "!n", "^0" ) //- normal

if( id ) players[ 0 ] = id; else get_players( players, count, "ch" )
{
for( new i = 0; i < count; i++ )
{
if( is_user_connected( players[ i ] ) )
{
message_begin( MSG_ONE_UNRELIABLE, get_user_msgid( "SayText" ), _, players[ i ] )
write_byte( players[ i ] );
write_string( msg );
message_end( );
}
}
}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ ansicpg1252\\ deff0\\ deflang1033{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ f0\\ fs16 \n\\ par }
*/
